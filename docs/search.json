[
  {
    "objectID": "baseConnaissanceGraphiquesJudo.html",
    "href": "baseConnaissanceGraphiquesJudo.html",
    "title": "Base de connaissance",
    "section": "",
    "text": "Ce document regroupe l’ensemble des graphiques et leurs codes, utilisés dans les présentations Judo Cares."
  },
  {
    "objectID": "baseConnaissanceGraphiquesJudo.html#code---sortie-du-document-en-eps",
    "href": "baseConnaissanceGraphiquesJudo.html#code---sortie-du-document-en-eps",
    "title": "Base de connaissance",
    "section": "Code - sortie du document en EPS",
    "text": "Code - sortie du document en EPS\nLe format EPS est à privilégier dès lors qu’il permet d’alléger les documents et de conserver une sortie entièrement vectorisée.\nsetEPS(paper=\"special\",width = 8,height = 10,horizontal = T, onefile = FALSE)\npostscript(file = \"/Users/jeremy/Downloads/stackedPlot.eps\")\nprint(plot3)\ndev.off()\nDans l’exemple ci-dessus, nous avons une ligne permettant de définir les caractéristiques de la sortie (hauteur, largeur) avant d’écrire le fichier eps du plot3.\n\nLes packages à installer\n\nlibrary(ggplot2)\nlibrary(reshape2)\nlibrary(ggrepel)\n\nlibrary(dplyr)\n\nlibrary(extrafont)\nfont_import()\n\nImporting fonts may take a few minutes, depending on the number of fonts and the speed of the system.\nContinue? [y/n] \n\nloadfonts()"
  },
  {
    "objectID": "baseConnaissanceGraphiquesJudo.html#exemple-de-graphiques",
    "href": "baseConnaissanceGraphiquesJudo.html#exemple-de-graphiques",
    "title": "Base de connaissance",
    "section": "Exemple de graphiques",
    "text": "Exemple de graphiques\n\nKILIMANJARO\n\nSituation de Kering\n\ntempData           <- read.csv(file = paste0(Sys.getenv(\"HOME\"), \"/Downloads/situationKili.csv\"), header = T, sep = \";\")\ntempData2          <- melt(tempData[,-grep(\"X|Methodology|Link\", colnames(tempData))], id = c(\"Country\", \"Project.Type\"))\ntempData2$variable <- as.numeric(gsub(\"Year.\", \"\", tempData2$variable))\ntempData2$value    <- as.numeric(gsub(\"_\", \"\", tempData2$value))\n\nprint(head(tempData2))\n\n     Country                            Project.Type variable  value\n1      Kenya Agriculture Forestry and Other Land Use     2012 115000\n2     Brazil Agriculture Forestry and Other Land Use     2012     NA\n3  Indonesia Agriculture Forestry and Other Land Use     2012     NA\n4 Madagascar Agriculture Forestry and Other Land Use     2012     NA\n5   Colombia Agriculture Forestry and Other Land Use     2012     NA\n6   Cambodia Agriculture Forestry and Other Land Use     2012     NA\n\ntextValue <- data.frame(Year = c(2012:2021),\n                        Sum = aggregate(tempData2$value, list(tempData2$variable), sum, na.rm = T)[,2])\n\ncolorsCountry      <- scales::gradient_n_pal(colours = c(\"#1B2441\", \"#64B9B9\"), space =  c(\"Lab\"))(seq(0,1,length.out = length(unique(tempData$Country))))\n\nggplot2::ggplot(data = tempData2, aes(x = variable, y = value, fill = Country)) + geom_bar(stat = \"identity\", color = \"white\") +\n  scale_fill_manual(values = colorsCountry) +\n  scale_y_continuous(position=\"right\") +\n  labs(y=\"TCO2e\", x = \"Year of carbon emissions\") +\n  annotate(geom=\"text\", x = textValue$Year, y = textValue$Sum + 0.025*max(textValue$Sum), label = format(textValue$Sum, big.mark = \" \", scientific = F), family = \"Kurier\") +\n  annotate(geom=\"text\", x = textValue$Year, y = -0.025*max(textValue$Sum), label = textValue$Year, size = 5, colour = \"#1B2441\", fontface = \"bold\", family = \"Kurier\") +\n  annotate(\"segment\", x = 2017.5, xend = 2017.5, y = -.1*max(textValue$Sum), yend = 1.075*max(textValue$Sum), colour = \"#64B9B9\")+ \n  annotate(\"text\", x = 2017.5,y = 1.15*max(textValue$Sum), label = \"Announcement of Full carbon neutrality\\nStart offsetting Scope 3 as well\", colour = \"#64B9B9\", family = \"Kurier\", fontface = \"bold\", size = 4)+ \n  annotate(\"segment\", x = 2021, xend = 2021, y = 1250000, yend = 2e6, colour = \"#1B2441\")+ \n  annotate(\"text\", x = 2021,y = 2.1e6, label = \"Firm2 only*\", colour = \"#1B2441\", family = \"Kurier\", fontface = \"bold\", size = 3)+ \n  theme(text=element_text(family=\"Kurier\", size=12),\n        legend.position = c(.1,.75),\n        panel.border = element_blank(),\n        axis.text=element_blank(),\n        axis.ticks=element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_rect(fill='transparent', colour='transparent'))\n\n\n\n\n\ntempData           <- read.csv(file = paste0(Sys.getenv(\"HOME\"), \"/Downloads/kiliSituation2-2.csv\"), header = T, sep = \";\")\ntempData1          <- melt(tempData[,c(\"Year\", \"scope12\",\"scope123\")], id = c(\"Year\"))\ntempData2          <- melt(tempData[,c(\"Year\", \"firm1Cost\", \"firm2Cost\")], id = c(\"Year\"))\ntempData3          <- melt(tempData[,c(\"Year\",\"firm2Purchase\", \"firm1Purchase\")], id = c(\"Year\"))\ntempData4          <- melt(tempData[,c(\"Year\",\"firm2Purchase\", \"firm1Purchase\")], id = c(\"Year\"))\ntempData1$value    <- as.numeric(gsub(\" \", \"\", tempData1$value))\ntempData2$value    <- as.numeric(gsub(\" €\", \"\", gsub(\" \", \"\", tempData2$value)))\ntempData3$value    <- as.numeric(gsub(\" €\", \"\", gsub(\" \", \"\", tempData3$value)))\ntempData4$value    <- as.numeric(gsub(\" €\", \"\", gsub(\" \", \"\", tempData4$value)))\ntempData1$variable <- factor(tempData1$variable, levels = c(\"scope123\", \"scope12\"))\ntempData3$variable <- factor(tempData3$variable, levels = c(\"firm1Purchase\",\"firm2Purchase\"))\n\nprint(head(tempData1))\n\n  Year variable  value\n1 2015  scope12 100635\n2 2016  scope12  96113\n3 2017  scope12  89200\n4 2018  scope12  47540\n5 2019  scope12  35728\n6 2020  scope12  25527\n\nprint(head(tempData3))\n\n  Year      variable   value\n1 2015 firm2Purchase      NA\n2 2016 firm2Purchase      NA\n3 2017 firm2Purchase      NA\n4 2018 firm2Purchase 1400000\n5 2019 firm2Purchase 1375600\n6 2020 firm2Purchase  939359\n\nggplot2::ggplot()+ \n  geom_area(data = tempData1[which(tempData1$Year <= 2020),], aes(x = Year, y = value, fill = variable), stat = \"identity\", color = \"white\", alpha = .7) +\n  geom_area(data = tempData1[which(tempData1$Year >= 2020),], aes(x = Year, y = value, fill = variable), stat = \"identity\", color = \"white\", alpha = .3) +\n  geom_bar(data = tempData3, aes(x = Year, y = value, fill = variable), size = 1, alpha = 1, width = .3, stat=\"identity\") + \n  scale_fill_manual(values = c(\"#1B2441\", \"#64B9B9\",\"#CE4257\", \"#BBBBBB\"), name = \"\", labels = c(\"Firm2\", \"Firm1\", \"Scope 1 & 2\", \"Scope 1, 2 & 3\")) +\n  scale_y_continuous(breaks = seq(0,2.5e6,500000), labels = format(seq(0,2.5e6,500000), big.mark = \" \", scientific = F)) +\n  annotate(\"text\", x = 2019, y = 2.7e6, label = \"Impact du COVID\", colour = \"#64B9B9\", family = \"Kurier\", fontface = \"bold\", size = 3) + \n  geom_segment(aes(x = 2019, y = 2.5e6, xend = 2019, yend = 1.55e6), arrow = arrow(length = unit(.25, \"cm\")), colour = \"#64B9B9\") + \n  annotate(\"text\", x = 2016, y = 300000, label = \"Scope 1 & 2 \\n totalement compensés\", colour = \"#1B2441\", family = \"Kurier\", size = 2) + \n  geom_segment(aes(x = 2015, y = 175000, xend = 2017, yend = 175000), colour = \"#1B2441\") + \n  annotate(\"text\", x = 2026, y = 1000000, label = \"Projections des Scope 1, 2 & 3\", colour = \"#1B2441\", family = \"Kurier\", size = 3) + \n  geom_segment(aes(x = 2022, y = 850000, xend = 2030, yend = 850000), colour = \"#1B2441\", arrow = arrow(ends='both', length = unit(.25, \"cm\"))) + \n  theme_classic() + \n  labs(x = \"Année d'émission\", y = \"TCO2e\") +\n  theme(text=element_text(family=\"Kurier\", size=12),\n        legend.position = \"right\",\n        panel.border = element_blank(),\n        # axis.title=element_blank(),\n        axis.text=element_text(family=\"Kurier\", size=10),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_rect(fill='transparent', colour='transparent'))\n\n\n\n\n\ntempData3bis  <- tempData3[which(tempData3$Year < 2021),]\ntempDataPrice <- data.frame(Year = c(2015:2020),\n                            Price = c(5.37, 5.03, 5.10, 5.51, 4.03, 6.97))\n\nprint(head(tempData3bis))\n\n  Year      variable   value\n1 2015 firm2Purchase      NA\n2 2016 firm2Purchase      NA\n3 2017 firm2Purchase      NA\n4 2018 firm2Purchase 1400000\n5 2019 firm2Purchase 1375600\n6 2020 firm2Purchase  939359\n\nprint(head(tempDataPrice))\n\n  Year Price\n1 2015  5.37\n2 2016  5.03\n3 2017  5.10\n4 2018  5.51\n5 2019  4.03\n6 2020  6.97\n\nggplot2::ggplot()+ \n  geom_bar(data = tempData3bis, aes(x = Year, y = value), fill = \"#1B2441\", size = 1, alpha = 1, width = .8, stat=\"identity\") + \n  geom_line(data = tempDataPrice, aes(x = Year, y = Price*250000), color = \"red\") +\n  geom_point(data = tempDataPrice, aes(x = Year, y = Price*250000), color = \"red\", size = 3) +\n  geom_text(data = tempDataPrice, aes(x = Year, y = Price*250000, label = paste(format(Price, digits = 2, nsmall = 2), \"EUR\")), color = \"red\", size = 3, vjust = -2) +\n  scale_y_continuous(breaks = seq(0,2.5e6,500000), labels = format(seq(0,2.5e6,500000), big.mark = \" \", scientific = F), sec.axis = sec_axis(~ . / 250000, name = derive())) +\n  annotate(\"text\", x = 2019, y = 2.7e6, label = \"Impact du COVID \\n Les émissions ne sont pas enitèrement compensées\", colour = \"#64B9B9\", family = \"Kurier\", fontface = \"bold\", size =3) + \n  geom_segment(aes(x = 2019, y = 2.5e6, xend = 2019, yend = 1.55e6), arrow = arrow(length = unit(.25, \"cm\")), colour = \"#64B9B9\") + \n  annotate(\"text\", x = 2016, y = 300000, label = \"2015 à 2018 : Compensation des\\nScope 1 et 2 seulement\", colour = \"#1B2441\", family = \"Kurier\", size = 2) + \n  geom_segment(aes(x = 2015, y = 175000, xend = 2017, yend = 175000), colour = \"#1B2441\") + \n  theme_classic() + \n  labs(x = \"Année d'émission\", y = \"TCO2e\") +\n  theme(text=element_text(family=\"Kurier\", size=12),\n        legend.position = \"right\",\n        panel.border = element_blank(),\n        # axis.title=element_blank(),\n        axis.text=element_text(family=\"Kurier\", size=10),\n        legend.title= element_blank(),          \n        panel.grid.major.y = element_line(colour=\"#F2F2F2\"),\n        panel.grid.minor = element_blank(),\n        panel.background = element_rect(fill='transparent', colour='transparent'))\n\n\n\n\n\n\n\nGAZEL\n\nPie Chart des forêts\n\nlibrary(ggplot2)\nlibrary(ggrepel)\n\ndataGraph3            <- data.frame(nom=c(\"Forêt domaniale\", \"Autres forêts publiques\",\"Forêts privées\"), value =c(0.2,0.36,0.44))\ndataGraph3$nom        <- factor(dataGraph3$nom,\n                                levels = c(\"Forêts privées\", \"Autres forêts publiques\",\"Forêt domaniale\"))\ndataGraph3[,\"breaks\"] <- cumsum(c(0, dataGraph3$value[-length(dataGraph3$value)])) +\n  (cumsum(dataGraph3$value) - cumsum(c(0, dataGraph3$value[-length(dataGraph3$value)]))) / 2\n  \nggplot2::ggplot(data=dataGraph3,aes(x=1,y=value))+\n  geom_bar(aes(fill = nom), stat=\"identity\", width = 1, show.legend = FALSE) +\n  geom_label_repel(aes(label = paste(nom, \"\\n\", 100*value, \"%\") , y = breaks, fill = nom), color = c(\"black\", \"white\", \"white\"), nudge_x = .6) +\n  scale_fill_manual(values = c(\"#64B9B9\",\"#012D48\",\"#D9D9D9\")) +\n  coord_polar(theta = \"y\") +\n  theme_minimal() + \n  theme(axis.title = element_blank(),\n        axis.text = element_blank(),\n        legend.position = \"none\")\n\n\n\n\n\n\n\nHistogramme cumulatif - données Gazel / LBC\n\nlibrary(ggplot2)\ntemp_data<-data.frame(nom=c(\"ReGazel\",\"ReEdf\",\"RE aéronefs 20%\",\"RE aéronefs 50%\",\"RE aéronefs 100%\", \"Stock\"),\n                      label = c(\"Besoin RE Gazel estimé \\n 1 000 000\", \"Besoin RE Gazel estimé \\n 2 000 000\", \"20%\", \"50%\", \"100%\", \"1 129 874\"),\n                      type = c(rep(\"Demande pour \\n l'exercice 2022\", 5), \"Stock de RE LBC \\n disponible émis depuis 2015\"),\n                      value=c(1000000,2000000,290000,580000,580000, 1129874))\n\ntemp_data[,\"cumValue\"] <- c(temp_data$value[1]/2, (temp_data$value[2:5]/2) + cumsum(temp_data$value[1:4]), temp_data$value[length(temp_data$value)]/2)\ntemp_data$nom <- factor(temp_data$nom,\n                    levels = c(\"RE aéronefs 100%\", \"RE aéronefs 50%\",\"RE aéronefs 20%\",\"ReEdf\",\"ReGazel\", \"Stock\"))\n\nggplot2::ggplot(data=temp_data)+\n  geom_bar(aes(x = type, y = value, fill = nom, color = nom), stat=\"identity\") +\n  scale_fill_manual(values = c(\"#D9D9D9\",\"#A6A6A6\",\"#7F7F7F\",\"#012D48\",\"#64B9B9\", \"#4F81BD\")) +\n  scale_color_manual(values = c(\"#D9D9D9\",\"#A6A6A6\",\"#7F7F7F\",\"#012D48\",\"#64B9B9\", \"#4F81BD\")) +\n  geom_text(aes(x = type, y = cumValue, label = label), color = c(\"white\",\"white\",\"black\",\"black\",\"black\", \"white\")) +\n  geom_hline(yintercept = temp_data$value[1], color = \"white\", linetype = \"dashed\") +\n  scale_y_continuous(name = \"tCO2eq\", breaks = seq(0,5*10^6,5*10^5), labels = format(seq(0,5*10^6,5*10^5), scientific = F, big.mark = \" \")) +\n  geom_segment(aes(x = 1.5, xend = 1.5, y = 3145000, yend = 4160000)) +\n  geom_point(aes(x = 1.5, y = c(3145000)), stat = \"identity\") +\n  geom_point(aes(x = 1.5, y = c(4160000)), stat = \"identity\") +\n  geom_text(aes(x = 2, y = (4160000+3145000)/2), label = \"Besoin RE transport aérien \\n intérieur estimé \\n 1 450 000 tCO2eq max*\", color = \"black\") +\n  theme_void() +\n  theme(axis.text.x = element_text(size = 11, angle = 0, vjust = 0.85, hjust=0.75),\n        axis.text.y = element_text(size = 11, angle = 0, vjust = 0, hjust=0),\n        legend.position = \"none\")\n\n\n\n\n\n\nHistogramme horizontal\n\nlibrary(dplyr)\n\ntempData               <- readxl::read_xlsx(path = paste0(Sys.getenv(\"HOME\"), \"/Downloads/EtudeStandards.xlsx\"), sheet = \"brut\")\ntempData[,\"Sum\"]       <- rowSums(tempData[,c(\"Mesurabilité\", \"Vérifiabilité\", \"Additionalité\", \"Permanence\", \"Unicité\")])\ncolnames(tempData)[1]  <- \"Name\"\ntempData$Name          <- factor(tempData$Name,\n                                 levels = tempData$Name[order(tempData$Sum)])\n# tempData$Additionalité <- -tempData$Additionalité\n\ndataPlot               <- reshape2::melt(tempData, id = \"Name\") %>% filter(variable != \"Prix à la tonne\" & variable != \"Note moyenne\"& variable != \"Sum\")\ndataPrice              <- reshape2::melt(tempData, id = \"Name\") %>% filter(variable == \"Prix à la tonne\")\n# ---- création du plot ---- #\nlibrary(ggplot2)\nggplot2::ggplot(data=dataPlot) +\n  geom_bar(aes(x = Name, y = value, group = variable, color = variable, fill = variable), alpha = .65, stat = \"identity\", position = \"stack\", width = 0.75) +\n  scale_fill_manual(values = c(\"#A6A6A6\",\"#7F7F7F\",\"#012D48\",\"#64B9B9\", \"#4F81BD\")) +\n  scale_color_manual(values = c(\"#A6A6A6\",\"#7F7F7F\",\"#012D48\",\"#64B9B9\", \"#4F81BD\")) +\n  geom_label(data = dataPrice[which(is.na(dataPrice$value) == F),], aes(x = Name, y = -.4, label = format(value, nsmall = 2, digits = 2)), fill = \"#012D48\", color = \"white\") +\n  # geom_segment(data = dataPrice, aes(x = Name, xend = Name, y = 0, yend = value/10), color=\"red\") +\n  ylim(c(-1,max(5*dataPlot$value))) +\n  theme_void() +\n  theme(axis.text.x = element_blank(),\n        axis.text.y = element_text(hjust=1, size = 10),\n        legend.position = \"right\",\n        legend.title = element_blank()) +\ncoord_flip()\n\n\n\n\n\n\nParrallel Weight Bars\n\n# ========= 3ème graphique =========== #\ndataGraph4            <- data.frame(nom=c(\"À la ferme\", \"Industrie\",\"Centralisé\",\"Déchets ménagers\",\"Couverture de fosse\",\"Station d'épuration\"), value = c(223,8,20,1,3,13))\n\ndataPlot.premierebarre <- data.frame(nom = c(\"À la ferme\", \"Autres\"),\n                                     value = c(223, sum(dataGraph4$value)-223))\n\ndataPlot.premierebarre[,\"value2\"] <- dataPlot.premierebarre$value / sum(dataPlot.premierebarre$value)\ndataPlot.premierebarre$nom        <- factor(dataPlot.premierebarre$nom,\n                                levels = rev(c(\"À la ferme\", \"Autres\")))\n\ndataPlot.secondebarre <- dataGraph4[-1,]\ndataPlot.secondebarre[,\"value2\"] <- dataPlot.secondebarre$value / sum(dataPlot.secondebarre$value)\ndataPlot.secondebarre$nom        <- factor(dataPlot.secondebarre$nom,\n                                            levels = rev(dataPlot.secondebarre$nom))\n\ndataPlot.premierebarre[,\"breaks\"] <- 0.5*(cumsum(c(0, dataPlot.premierebarre$value2[-length(dataPlot.premierebarre$value2)])) + cumsum(dataPlot.premierebarre$value2))\ndataPlot.secondebarre[,\"breaks\"] <- 0.5*(cumsum(c(0, dataPlot.secondebarre$value2[-length(dataPlot.secondebarre$value2)])) + cumsum(dataPlot.secondebarre$value2))\n\nlibrary(ggrepel)\n\nggplot2::ggplot()+\n  geom_bar(data = dataPlot.premierebarre, aes(x = 1, y = value2), color = \"white\", fill = c(\"#012D48\", \"#4E6176\"), stat=\"identity\", width = 1, show.legend = FALSE) +\n  geom_bar(data = dataPlot.secondebarre, aes(x = 3, y = value2), color = \"white\", fill = c(\"#D9D9D9\", \"#BED1D1\", \"#A3C9C9\", \"#85C1C1\", \"#64B9B9\"), stat=\"identity\", width = 1, show.legend = FALSE) +\n  geom_segment(aes(x = 1.5, xend = 2.5, y = dataPlot.premierebarre$value2[1], yend = 0), linetype = \"dashed\") +\n  geom_segment(aes(x = 1.5, xend = 2.5, y = 1, yend = 1), linetype = \"dashed\") +\n  geom_ribbon(aes(x=c(1.5, 2.5), ymin = c(dataPlot.premierebarre$value2[1], 0), ymax = c(1, 1)), fill = \"#f2f2f2\", alpha = .8) +\n  geom_label_repel(data = dataPlot.premierebarre, aes(x = 1, label = paste(nom, \"\\n\", value) , y = breaks), fill = c(\"#012D48\", \"#4E6176\"), color = c(\"white\", \"white\"), nudge_x = -0.6) +\n  geom_label_repel(data = dataPlot.secondebarre, aes(x = 3, label = paste(nom, \"\\n\", value) , y = breaks), fill = c(\"#D9D9D9\", \"#BED1D1\", \"#A3C9C9\", \"#85C1C1\", \"#64B9B9\"), color = c(\"black\", \"black\", \"white\",\"white\",\"white\"), nudge_x = 0.6) +\n  theme_void() +\n  theme(axis.title = element_blank(),\n        axis.text = element_blank(),\n        legend.position = \"none\")"
  }
]